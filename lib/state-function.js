// Generated by CoffeeScript 1.6.3
(function() {
  var RootState, StateExpression, define, implement, state;

  RootState = null;

  StateExpression = null;

  module.exports = state = function(owner, attributes, expression, options) {
    if (arguments.length < 2) {
      if (typeof owner === 'string') {
        attributes = owner;
      } else {
        expression = owner;
      }
      owner = void 0;
    } else {
      if (typeof owner === 'string') {
        options = expression;
        expression = attributes;
        attributes = owner;
        owner = void 0;
      }
      if (typeof attributes !== 'string') {
        options = expression;
        expression = attributes;
        attributes = void 0;
      }
    }
    if (owner != null) {
      return implement(owner, attributes, expression, options);
    } else {
      return define(attributes, expression);
    }
  };

  state.define = define = function(attributes, expression) {
    return new StateExpression(attributes, expression);
  };

  state.implement = implement = function(owner, attributes, expression, options) {
    var initial, name, root, stateExpression;
    if (options != null) {
      name = options.name, initial = options.initial;
    }
    stateExpression = new StateExpression(attributes, expression);
    root = new RootState(owner, stateExpression, name, initial);
    return root._current;
  };

  (require('./export-static')).apply(state);

  RootState = require('./root-state');

  StateExpression = require('./state-expression');

}).call(this);
